// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oziCwM22VswxiFyZsu5zc9
// Component: uXwbWH0abmN
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: AEGXSyY0cKE/component
import ProductCarousel from "../../ProductCarousel"; // plasmic-import: YKfkw43kjpHc/component
import ProductCard from "../../ProductCard"; // plasmic-import: 3sXhAKublOas/component
import Ratings from "../../Ratings"; // plasmic-import: sAzIJy6R524j/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: Xm6ls7vw1pX/component
import BlogPost from "../../BlogPost"; // plasmic-import: vNoLI-FxQWcb/component
import Footer from "../../Footer"; // plasmic-import: kKnVskbtalV/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2UleRr5sZkQO/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: oziCwM22VswxiFyZsu5zc9/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: uXwbWH0abmN/css

import arrivals1ORz21Ji8YmU from "./images/arrivals1.png"; // plasmic-import: oRz21JI8YmU-/picture
import arrivals2ZhRo1VmVTgI from "./images/arrivals2.png"; // plasmic-import: ZHRo-1vmVTgI/picture
import arrivals3V6DlkCFpXjbb from "./images/arrivals3.png"; // plasmic-import: V6dlkCFpXJBB/picture
import arrivals4WEUdzV7Ektum from "./images/arrivals4.png"; // plasmic-import: wEUdzV7EKTUM/picture
import arrivals5UxzxrnyJnxU1 from "./images/arrivals5.png"; // plasmic-import: UXZXRNYJnxU1/picture
import arrivals6Eg8CyrDzQsZ from "./images/arrivals6.png"; // plasmic-import: EG8cyrDzQs_z/picture
import arrivals7W7LdygjU1UI from "./images/arrivals7.png"; // plasmic-import: w7LDYGJ_u1uI/picture
import arrivals8SyGzpPlzzMg from "./images/arrivals8.png"; // plasmic-import: Sy_gzpPLZZMg/picture
import f1CmXMdwB5I8Fr from "./images/f1.jpeg"; // plasmic-import: cmXMdwB5I8FR/picture
import f2HcwFxM2LlHx0 from "./images/f2.jpeg"; // plasmic-import: hcwFxM2llHx0/picture
import f37OcjZagk2WEd from "./images/f3.jpeg"; // plasmic-import: 7ocjZAGK2wEd/picture
import f4UEppnnq9GS from "./images/f4.jpeg"; // plasmic-import: UEppnnq9G-s-/picture
import b1TrdaYjWuC5Ej from "./images/b1.jpeg"; // plasmic-import: trdaYjWuC5EJ/picture
import b2C2LrMjAmeWkp from "./images/b2.jpeg"; // plasmic-import: c2lrMJAmeWkp/picture
import b3ED7Ylnbykgoj from "./images/b3.jpeg"; // plasmic-import: eD7ylnbykgoj/picture
import adidasI0FDa2Vx5Cot from "./images/adidas.png"; // plasmic-import: I0fDA2VX5COT/picture
import hm2KNDPGkYo5 from "./images/hm.png"; // plasmic-import: 2K_N-dPGkYO5/picture
import kappaMG8PrwBo4JW from "./images/kappa.png"; // plasmic-import: mG8prwBO-4jW/picture
import lacosteLi0C8XXk9Vtm from "./images/lacoste.png"; // plasmic-import: Li0C8xXK9Vtm/picture
import levisWRda8Fk0DRk from "./images/levis.png"; // plasmic-import: WRda8Fk0_dRK/picture

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  productCarousel?: p.Flex<typeof ProductCarousel>;
  featureItem?: p.Flex<typeof FeatureItem>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomeProps {
  className?: string;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  dataFetches?: PlasmicHome__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.freeBox__yK3LD)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___18J9P)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox___6T0I)}>
                <Header
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                />

                <ProductCarousel
                  data-plasmic-name={"productCarousel"}
                  data-plasmic-override={overrides.productCarousel}
                  className={classNames("__wab_instance", sty.productCarousel)}
                />
              </div>
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox__l0Scu)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__fmfrz
                )}
              >
                {"New Arrivals"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__qqnT5)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__rgZac)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__gRDg)}
                    role={"img"}
                    src={arrivals1ORz21Ji8YmU}
                  />
                }
                onSale={"onSale" as const}
                price={"$65.00"}
                ratings={
                  <Ratings
                    className={classNames(
                      "__wab_instance",
                      sty.ratings___15Jy3
                    )}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__bphgh)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__z9Bg7)}
                    role={"img"}
                    src={arrivals2ZhRo1VmVTgI}
                  />
                }
                onSale={"onSale" as const}
                price={"$80.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__pyaPi)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Single Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__wnNxr)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__erLyE)}
                    role={"img"}
                    src={arrivals3V6DlkCFpXjbb}
                  />
                }
                price={"$40.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__dXmal)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__eMQc)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__ioo51)}
                    role={"img"}
                    src={arrivals4WEUdzV7Ektum}
                  />
                }
                onSale={"onSale" as const}
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__vKJf7)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Stylish Chair"}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__bdUx1)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__o1SlB)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__uorTm)}
                    role={"img"}
                    src={arrivals5UxzxrnyJnxU1}
                  />
                }
                price={"$120.00"}
                title={"Modern Chair"}
              />

              <ProductCard
                className={classNames(
                  "__wab_instance",
                  sty.productCard___4NbA9
                )}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__eARvB)}
                    role={"img"}
                    src={arrivals6Eg8CyrDzQsZ}
                  />
                }
                onSale={"onSale" as const}
                price={"$140.00"}
                title={"Mapple Wood Dinning Table"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__wBsyv)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__fPhI7)}
                    role={"img"}
                    src={arrivals7W7LdygjU1UI}
                  />
                }
                onSale={"onSale" as const}
                price={"$90.00"}
                title={"Arm Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__jrIkc)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__w6VBh)}
                    role={"img"}
                    src={arrivals8SyGzpPlzzMg}
                  />
                }
                price={"$140.00"}
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___3Flp
                    )}
                  >
                    {"Wooden Bed"}
                  </div>
                }
              />
            </p.Stack>

            <FeatureItem
              data-plasmic-name={"featureItem"}
              data-plasmic-override={overrides.featureItem}
              className={classNames("__wab_instance", sty.featureItem)}
            />

            <div className={classNames(defaultcss.all, sty.freeBox___4ZS79)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__fG7Jd
                )}
              >
                {"Featured Products"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__lOcK)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__sBgIj)}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__uL3FI
                    )}
                  >
                    {"$160.00"}
                  </div>
                }
                ratings={
                  <Ratings
                    className={classNames(
                      "__wab_instance",
                      sty.ratings___5YxEu
                    )}
                    numReviews={"(12 Review)"}
                    stars={"two" as const}
                  />
                }
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__ad68G
                    )}
                  >
                    {"Designed Sofa"}
                  </div>
                }
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__yQTcp)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__slhiQ)}
                    role={"img"}
                    src={f2HcwFxM2LlHx0}
                  />
                }
                price={"$200.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__ivXmm)}
                    stars={"four" as const}
                  />
                }
                title={"Dining Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__kJopq)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__ztfq4)}
                    role={"img"}
                    src={f37OcjZagk2WEd}
                  />
                }
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames(
                      "__wab_instance",
                      sty.ratings___1VEzU
                    )}
                    numReviews={"(23 Review)"}
                    stars={"five" as const}
                  />
                }
                title={"Chair and Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__vcXoL)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__nLnp5)}
                    role={"img"}
                    src={f4UEppnnq9GS}
                  />
                }
                price={"$299.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__t7Mn6)}
                    numReviews={"(35 Review)"}
                  />
                }
                title={"Modern Arm Chair"}
                withReviews={"withReviews" as const}
              />
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox__lzogi)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__v8Jz
                )}
              >
                {"Latest Blog"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__q1Aaj)}
            >
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__eAsX9)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__atxIr)}
                    role={"img"}
                    src={b1TrdaYjWuC5Ej}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__e6Ib)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__sp9IE)}
                    role={"img"}
                    src={b2C2LrMjAmeWkp}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__tYqYw)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__tDyEs)}
                    role={"img"}
                    src={b3ED7Ylnbykgoj}
                  />
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___9PxOz)}
            >
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__gjQFs)}
                role={"img"}
                src={adidasI0FDa2Vx5Cot}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__kMa74)}
                role={"img"}
                src={hm2KNDPGkYo5}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__mglp7)}
                role={"img"}
                src={kappaMG8PrwBo4JW}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__nzEAp)}
                role={"img"}
                src={lacosteLi0C8XXk9Vtm}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__qT3Bm)}
                role={"img"}
                src={levisWRda8Fk0DRk}
              />
            </p.Stack>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "productCarousel", "featureItem", "footer"],
  header: ["header"],
  productCarousel: ["productCarousel"],
  featureItem: ["featureItem"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  productCarousel: typeof ProductCarousel;
  featureItem: typeof FeatureItem;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs;
    args?: PlasmicHome__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHome__Fetches;
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    productCarousel: makeNodeComponent("productCarousel"),
    featureItem: makeNodeComponent("featureItem"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
